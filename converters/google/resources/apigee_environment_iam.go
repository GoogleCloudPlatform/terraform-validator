// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package google

import "fmt"

// Provide a separate asset type constant so we don't have to worry about name conflicts between IAM and non-IAM converter files
const ApigeeEnvironmentIAMAssetType string = "apigee.googleapis.com/Environment"

func resourceConverterApigeeEnvironmentIamPolicy() ResourceConverter {
	return ResourceConverter{
		AssetType:         ApigeeEnvironmentIAMAssetType,
		Convert:           GetApigeeEnvironmentIamPolicyCaiObject,
		MergeCreateUpdate: MergeApigeeEnvironmentIamPolicy,
	}
}

func resourceConverterApigeeEnvironmentIamBinding() ResourceConverter {
	return ResourceConverter{
		AssetType:         ApigeeEnvironmentIAMAssetType,
		Convert:           GetApigeeEnvironmentIamBindingCaiObject,
		FetchFullResource: FetchApigeeEnvironmentIamPolicy,
		MergeCreateUpdate: MergeApigeeEnvironmentIamBinding,
		MergeDelete:       MergeApigeeEnvironmentIamBindingDelete,
	}
}

func resourceConverterApigeeEnvironmentIamMember() ResourceConverter {
	return ResourceConverter{
		AssetType:         ApigeeEnvironmentIAMAssetType,
		Convert:           GetApigeeEnvironmentIamMemberCaiObject,
		FetchFullResource: FetchApigeeEnvironmentIamPolicy,
		MergeCreateUpdate: MergeApigeeEnvironmentIamMember,
		MergeDelete:       MergeApigeeEnvironmentIamMemberDelete,
	}
}

func GetApigeeEnvironmentIamPolicyCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newApigeeEnvironmentIamAsset(d, config, expandIamPolicyBindings)
}

func GetApigeeEnvironmentIamBindingCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newApigeeEnvironmentIamAsset(d, config, expandIamRoleBindings)
}

func GetApigeeEnvironmentIamMemberCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newApigeeEnvironmentIamAsset(d, config, expandIamMemberBindings)
}

func MergeApigeeEnvironmentIamPolicy(existing, incoming Asset) Asset {
	existing.IAMPolicy = incoming.IAMPolicy
	return existing
}

func MergeApigeeEnvironmentIamBinding(existing, incoming Asset) Asset {
	return mergeIamAssets(existing, incoming, mergeAuthoritativeBindings)
}

func MergeApigeeEnvironmentIamBindingDelete(existing, incoming Asset) Asset {
	return mergeDeleteIamAssets(existing, incoming, mergeDeleteAuthoritativeBindings)
}

func MergeApigeeEnvironmentIamMember(existing, incoming Asset) Asset {
	return mergeIamAssets(existing, incoming, mergeAdditiveBindings)
}

func MergeApigeeEnvironmentIamMemberDelete(existing, incoming Asset) Asset {
	return mergeDeleteIamAssets(existing, incoming, mergeDeleteAdditiveBindings)
}

func newApigeeEnvironmentIamAsset(
	d TerraformResourceData,
	config *Config,
	expandBindings func(d TerraformResourceData) ([]IAMBinding, error),
) ([]Asset, error) {
	bindings, err := expandBindings(d)
	if err != nil {
		return []Asset{}, fmt.Errorf("expanding bindings: %v", err)
	}

	name, err := assetName(d, config, "//apigee.googleapis.com/{{org_id}}/environments/{{env_id}}")
	if err != nil {
		return []Asset{}, err
	}

	return []Asset{{
		Name: name,
		Type: ApigeeEnvironmentIAMAssetType,
		IAMPolicy: &IAMPolicy{
			Bindings: bindings,
		},
	}}, nil
}

func FetchApigeeEnvironmentIamPolicy(d TerraformResourceData, config *Config) (Asset, error) {
	// Check if the identity field returns a value
	if _, ok := d.GetOk("org_id"); !ok {
		return Asset{}, ErrEmptyIdentityField
	}
	if _, ok := d.GetOk("env_id"); !ok {
		return Asset{}, ErrEmptyIdentityField
	}

	return fetchIamPolicy(
		ApigeeEnvironmentIamUpdaterProducer,
		d,
		config,
		"//apigee.googleapis.com/{{org_id}}/environments/{{env_id}}",
		ApigeeEnvironmentIAMAssetType,
	)
}

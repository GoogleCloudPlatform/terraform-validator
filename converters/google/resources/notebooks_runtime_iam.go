// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package google

import "fmt"

// Provide a separate asset type constant so we don't have to worry about name conflicts between IAM and non-IAM converter files
const NotebooksRuntimeIAMAssetType string = "notebooks.googleapis.com/Runtime"

func resourceConverterNotebooksRuntimeIamPolicy() ResourceConverter {
	return ResourceConverter{
		AssetType:         NotebooksRuntimeIAMAssetType,
		Convert:           GetNotebooksRuntimeIamPolicyCaiObject,
		MergeCreateUpdate: MergeNotebooksRuntimeIamPolicy,
	}
}

func resourceConverterNotebooksRuntimeIamBinding() ResourceConverter {
	return ResourceConverter{
		AssetType:         NotebooksRuntimeIAMAssetType,
		Convert:           GetNotebooksRuntimeIamBindingCaiObject,
		FetchFullResource: FetchNotebooksRuntimeIamPolicy,
		MergeCreateUpdate: MergeNotebooksRuntimeIamBinding,
		MergeDelete:       MergeNotebooksRuntimeIamBindingDelete,
	}
}

func resourceConverterNotebooksRuntimeIamMember() ResourceConverter {
	return ResourceConverter{
		AssetType:         NotebooksRuntimeIAMAssetType,
		Convert:           GetNotebooksRuntimeIamMemberCaiObject,
		FetchFullResource: FetchNotebooksRuntimeIamPolicy,
		MergeCreateUpdate: MergeNotebooksRuntimeIamMember,
		MergeDelete:       MergeNotebooksRuntimeIamMemberDelete,
	}
}

func GetNotebooksRuntimeIamPolicyCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newNotebooksRuntimeIamAsset(d, config, expandIamPolicyBindings)
}

func GetNotebooksRuntimeIamBindingCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newNotebooksRuntimeIamAsset(d, config, expandIamRoleBindings)
}

func GetNotebooksRuntimeIamMemberCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newNotebooksRuntimeIamAsset(d, config, expandIamMemberBindings)
}

func MergeNotebooksRuntimeIamPolicy(existing, incoming Asset) Asset {
	existing.IAMPolicy = incoming.IAMPolicy
	return existing
}

func MergeNotebooksRuntimeIamBinding(existing, incoming Asset) Asset {
	return mergeIamAssets(existing, incoming, mergeAuthoritativeBindings)
}

func MergeNotebooksRuntimeIamBindingDelete(existing, incoming Asset) Asset {
	return mergeDeleteIamAssets(existing, incoming, mergeDeleteAuthoritativeBindings)
}

func MergeNotebooksRuntimeIamMember(existing, incoming Asset) Asset {
	return mergeIamAssets(existing, incoming, mergeAdditiveBindings)
}

func MergeNotebooksRuntimeIamMemberDelete(existing, incoming Asset) Asset {
	return mergeDeleteIamAssets(existing, incoming, mergeDeleteAdditiveBindings)
}

func newNotebooksRuntimeIamAsset(
	d TerraformResourceData,
	config *Config,
	expandBindings func(d TerraformResourceData) ([]IAMBinding, error),
) ([]Asset, error) {
	bindings, err := expandBindings(d)
	if err != nil {
		return []Asset{}, fmt.Errorf("expanding bindings: %v", err)
	}

	name, err := assetName(d, config, "//notebooks.googleapis.com/projects/{{project}}/locations/{{location}}/runtimes/{{runtime_name}}")
	if err != nil {
		return []Asset{}, err
	}

	return []Asset{{
		Name: name,
		Type: NotebooksRuntimeIAMAssetType,
		IAMPolicy: &IAMPolicy{
			Bindings: bindings,
		},
	}}, nil
}

func FetchNotebooksRuntimeIamPolicy(d TerraformResourceData, config *Config) (Asset, error) {
	// Check if the identity field returns a value
	if _, ok := d.GetOk("location"); !ok {
		return Asset{}, ErrEmptyIdentityField
	}
	if _, ok := d.GetOk("runtime_name"); !ok {
		return Asset{}, ErrEmptyIdentityField
	}

	return fetchIamPolicy(
		NotebooksRuntimeIamUpdaterProducer,
		d,
		config,
		"//notebooks.googleapis.com/projects/{{project}}/locations/{{location}}/runtimes/{{runtime_name}}",
		NotebooksRuntimeIAMAssetType,
	)
}

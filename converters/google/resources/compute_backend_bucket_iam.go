// ----------------------------------------------------------------------------
//
//     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
//
// ----------------------------------------------------------------------------
//
//     This file is automatically generated by Magic Modules and manual
//     changes will be clobbered when the file is regenerated.
//
//     Please read more about how to change this file in
//     .github/CONTRIBUTING.md.
//
// ----------------------------------------------------------------------------

package google

import "fmt"

// Provide a separate asset type constant so we don't have to worry about name conflicts between IAM and non-IAM converter files
const ComputeBackendBucketIAMAssetType string = "compute.googleapis.com/BackendBucket"

func resourceConverterComputeBackendBucketIamPolicy() ResourceConverter {
	return ResourceConverter{
		AssetType:         ComputeBackendBucketIAMAssetType,
		Convert:           GetComputeBackendBucketIamPolicyCaiObject,
		MergeCreateUpdate: MergeComputeBackendBucketIamPolicy,
	}
}

func resourceConverterComputeBackendBucketIamBinding() ResourceConverter {
	return ResourceConverter{
		AssetType:         ComputeBackendBucketIAMAssetType,
		Convert:           GetComputeBackendBucketIamBindingCaiObject,
		FetchFullResource: FetchComputeBackendBucketIamPolicy,
		MergeCreateUpdate: MergeComputeBackendBucketIamBinding,
		MergeDelete:       MergeComputeBackendBucketIamBindingDelete,
	}
}

func resourceConverterComputeBackendBucketIamMember() ResourceConverter {
	return ResourceConverter{
		AssetType:         ComputeBackendBucketIAMAssetType,
		Convert:           GetComputeBackendBucketIamMemberCaiObject,
		FetchFullResource: FetchComputeBackendBucketIamPolicy,
		MergeCreateUpdate: MergeComputeBackendBucketIamMember,
		MergeDelete:       MergeComputeBackendBucketIamMemberDelete,
	}
}

func GetComputeBackendBucketIamPolicyCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newComputeBackendBucketIamAsset(d, config, expandIamPolicyBindings)
}

func GetComputeBackendBucketIamBindingCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newComputeBackendBucketIamAsset(d, config, expandIamRoleBindings)
}

func GetComputeBackendBucketIamMemberCaiObject(d TerraformResourceData, config *Config) ([]Asset, error) {
	return newComputeBackendBucketIamAsset(d, config, expandIamMemberBindings)
}

func MergeComputeBackendBucketIamPolicy(existing, incoming Asset) Asset {
	existing.IAMPolicy = incoming.IAMPolicy
	return existing
}

func MergeComputeBackendBucketIamBinding(existing, incoming Asset) Asset {
	return mergeIamAssets(existing, incoming, mergeAuthoritativeBindings)
}

func MergeComputeBackendBucketIamBindingDelete(existing, incoming Asset) Asset {
	return mergeDeleteIamAssets(existing, incoming, mergeDeleteAuthoritativeBindings)
}

func MergeComputeBackendBucketIamMember(existing, incoming Asset) Asset {
	return mergeIamAssets(existing, incoming, mergeAdditiveBindings)
}

func MergeComputeBackendBucketIamMemberDelete(existing, incoming Asset) Asset {
	return mergeDeleteIamAssets(existing, incoming, mergeDeleteAdditiveBindings)
}

func newComputeBackendBucketIamAsset(
	d TerraformResourceData,
	config *Config,
	expandBindings func(d TerraformResourceData) ([]IAMBinding, error),
) ([]Asset, error) {
	bindings, err := expandBindings(d)
	if err != nil {
		return []Asset{}, fmt.Errorf("expanding bindings: %v", err)
	}

	name, err := assetName(d, config, "//compute.googleapis.com/projects/{{project}}/global/backendBuckets/{{name}}")
	if err != nil {
		return []Asset{}, err
	}

	return []Asset{{
		Name: name,
		Type: ComputeBackendBucketIAMAssetType,
		IAMPolicy: &IAMPolicy{
			Bindings: bindings,
		},
	}}, nil
}

func FetchComputeBackendBucketIamPolicy(d TerraformResourceData, config *Config) (Asset, error) {
	// Check if the identity field returns a value
	if _, ok := d.GetOk("name"); !ok {
		return Asset{}, ErrEmptyIdentityField
	}

	return fetchIamPolicy(
		ComputeBackendBucketIamUpdaterProducer,
		d,
		config,
		"//compute.googleapis.com/projects/{{project}}/global/backendBuckets/{{name}}",
		ComputeBackendBucketIAMAssetType,
	)
}
